import ProblemsTable from "@/components/ProblemsTable/ProblemsTable";
import Topbar from "@/components/Topbar/Topbar";
import useHasMounted from "@/hooks/useHasMounted";
import { firestore } from "@/firebase/firebase";
import { useState } from "react";
import { doc, setDoc } from "firebase/firestore";

export default function Home() {
	

	const [inputs, setInputs] = useState({
		id: "",
		title: "",
		difficulty: "",
		category: "",
		videoId: "",
		link: "",
		order: 0,
		likes: 0,
		dislikes: 0,
	});

	const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setInputs({
			...inputs,
			[e.target.name]: e.target.value,
		});
	};

	const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
		e.preventDefault(); // Prevent default form submission

		if (!inputs.id || !inputs.title || !inputs.difficulty || !inputs.category) {
			alert("Please fill out all required fields.");
			return;
		}

		const newProblem = {
			...inputs,
			order: Number(inputs.order), // Ensure 'order' is a number
		};

		try {
			await setDoc(doc(firestore, "problems", inputs.id), newProblem);
			alert("Problem saved to database!");
			// Optionally, you can reset the form fields here
			setInputs({
				id: "",
				title: "",
				difficulty: "",
				category: "",
				videoId: "",
				link: "",
				order: 0,
				likes: 0,
				dislikes: 0,
			});
		} catch (error) {
			console.error("Error saving problem to database: ", error);
			alert("Failed to save problem to database.");
		}
	};

	return (
		<>
			<main className="bg-dark-layer-2 min-h-screen">
				<Topbar />
				<h1 className="text-2xl text-center text-gray-700 dark:text-gray-400 font-medium uppercase mt-10 mb-5">
					&ldquo; QUALITY OVER QUANTITY &rdquo; ðŸ‘‡
				</h1>
				<div className="relative overflow-x-auto mx-auto px-6 pb-10">
					{ (
						<div className="max-w-[1200px] mx-auto sm:w-7/12 w-full animate-pulse">
							{[...Array(10)].map((_, idx) => (
								<LoadingSkeleton key={idx} />
							))}
						</div>
					)}
					<table className="text-sm text-left text-gray-500 dark:text-gray-400 sm:w-7/12 w-full max-w-[1200px] mx-auto">
						{ (
							<thead className="text-xs text-gray-700 uppercase dark:text-gray-400 border-b">
								<tr>
									<th scope="col" className="px-1 py-3 w-0 font-medium">
										Status
									</th>
									<th scope="col" className="px-6 py-3 w-0 font-medium">
										Title
									</th>
									<th scope="col" className="px-6 py-3 w-0 font-medium">
										Difficulty
									</th>
									<th scope="col" className="px-6 py-3 w-0 font-medium">
										Category
									</th>
									<th scope="col" className="px-6 py-3 w-0 font-medium">
										Solution
									</th>
								</tr>
							</thead>
						)}
						
					</table>
				</div>
				<form className="p-6 flex flex-col max-w-sm gap-3" onSubmit={handleSubmit}>
					<input
						onChange={handleInputChange}
						value={inputs.id}
						type="text"
						placeholder="Problem ID"
						name="id"
						required
					/>
					<input
						onChange={handleInputChange}
						value={inputs.title}
						type="text"
						placeholder="Title"
						name="title"
						required
					/>
					<input
						onChange={handleInputChange}
						value={inputs.difficulty}
						type="text"
						placeholder="Difficulty"
						name="difficulty"
						required
					/>
					<input
						onChange={handleInputChange}
						value={inputs.category}
						type="text"
						placeholder="Category"
						name="category"
						required
					/>
					<input
						onChange={handleInputChange}
						value={inputs.videoId}
						type="text"
						placeholder="Video ID"
						name="videoId"
					/>
					<input
						onChange={handleInputChange}
						value={inputs.link}
						type="text"
						placeholder="Link"
						name="link"
					/>
					<input
						onChange={handleInputChange}
						value={inputs.order}
						type="number"
						placeholder="Order"
						name="order"
					/>
					<button type="submit" className="bg-white py-2 px-4 rounded-lg">
						Save to DB
					</button>
				</form>
			</main>
		</>
	);
}

const LoadingSkeleton = () => {
	return (
		<div className="flex items-center space-x-12 mt-4 px-6">
			<div className="w-6 h-6 shrink-0 rounded-full bg-dark-layer-1"></div>
			<div className="h-4 sm:w-52 w-32 rounded-full bg-dark-layer-1"></div>
			<div className="h-4 sm:w-52 w-32 rounded-full bg-dark-layer-1"></div>
			<div className="h-4 sm:w-52 w-32 rounded-full bg-dark-layer-1"></div>
			<span className="sr-only">Loading...</span>
		</div>
	);
};
